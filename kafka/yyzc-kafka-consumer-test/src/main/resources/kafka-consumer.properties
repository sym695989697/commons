# zookeeper\u8fde\u63a5\u670d\u52a1\u5668\u5730\u5740\uff0c\u6b64\u5904\u4e3a\u7ebf\u4e0b\u6d4b\u8bd5\u73af\u5883\u914d\u7f6e(kafka\u6d88\u606f\u670d\u52a1-->kafka broker\u96c6\u7fa4\u7ebf\u4e0a\u90e8\u7f72\u73af\u5883wiki)
# \u914d\u7f6e\u4f8b\u5b50\uff1a"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002"
zookeeper.connect=192.168.110.99:2181,192.168.110.171:2181,192.168.110.101:2181
# zookeeper\u7684session\u8fc7\u671f\u65f6\u95f4\uff0c\u9ed8\u8ba45000ms\uff0c\u7528\u4e8e\u68c0\u6d4b\u6d88\u8d39\u8005\u662f\u5426\u6302\u6389\uff0c\u5f53\u6d88\u8d39\u8005\u6302\u6389\uff0c\u5176\u4ed6\u6d88\u8d39\u8005\u8981\u7b49\u8be5\u6307\u5b9a\u65f6\u95f4\u624d\u80fd\u68c0\u67e5\u5230\u5e76\u4e14\u89e6\u53d1\u91cd\u65b0\u8d1f\u8f7d\u5747\u8861
zookeeper.session.timeout.ms=5000
zookeeper.connection.timeout.ms=10000
#\u5f53consumer reblance\u65f6\uff0c\u91cd\u8bd5\u5931\u8d25\u65f6\u65f6\u95f4\u95f4\u9694\u3002
zookeeper.sync.time.ms=200
 
#\u6307\u5b9a\u6d88\u8d39\u7ec4
group.id=hhwd_test
# \u5f53consumer\u6d88\u8d39\u4e00\u5b9a\u91cf\u7684\u6d88\u606f\u4e4b\u540e,\u5c06\u4f1a\u81ea\u52a8\u5411zookeeper\u63d0\u4ea4offset\u4fe1\u606f 
# \u6ce8\u610foffset\u4fe1\u606f\u5e76\u4e0d\u662f\u6bcf\u6d88\u8d39\u4e00\u6b21\u6d88\u606f\u5c31\u5411zk\u63d0\u4ea4\u4e00\u6b21,\u800c\u662f\u73b0\u5728\u672c\u5730\u4fdd\u5b58(\u5185\u5b58),\u5e76\u5b9a\u671f\u63d0\u4ea4,\u9ed8\u8ba4\u4e3atrue
auto.commit.enable=true
# \u81ea\u52a8\u66f4\u65b0\u65f6\u95f4\u3002\u9ed8\u8ba460 * 1000
auto.commit.interval.ms=1000
 
# \u5f53\u524dconsumer\u7684\u6807\u8bc6,\u53ef\u4ee5\u8bbe\u5b9a,\u4e5f\u53ef\u4ee5\u6709\u7cfb\u7edf\u751f\u6210,\u4e3b\u8981\u7528\u6765\u8ddf\u8e2a\u6d88\u606f\u6d88\u8d39\u60c5\u51b5,\u4fbf\u4e8e\u89c2\u5bdf
#conusmer.id=xxx
 
# \u6d88\u8d39\u8005\u5ba2\u6237\u7aef\u7f16\u53f7\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u5ba2\u6237\u7aef\uff0c\u9ed8\u8ba4\u5ba2\u6237\u7aef\u7a0b\u5e8f\u81ea\u52a8\u4ea7\u751f
#client.id=xxxx
# \u6700\u5927\u53d6\u591a\u5c11\u5757\u7f13\u5b58\u5230\u6d88\u8d39\u8005(\u9ed8\u8ba410)
queued.max.message.chunks=50
# \u5f53\u6709\u65b0\u7684consumer\u52a0\u5165\u5230group\u65f6,\u5c06\u4f1areblance,\u6b64\u540e\u5c06\u4f1a\u6709partitions\u7684\u6d88\u8d39\u7aef\u8fc1\u79fb\u5230\u65b0 
# \u7684consumer\u4e0a,\u5982\u679c\u4e00\u4e2aconsumer\u83b7\u5f97\u4e86\u67d0\u4e2apartition\u7684\u6d88\u8d39\u6743\u9650,\u90a3\u4e48\u5b83\u5c06\u4f1a\u5411zk\u6ce8\u518c 
# "Partition Owner registry"\u8282\u70b9\u4fe1\u606f,\u4f46\u662f\u6709\u53ef\u80fd\u6b64\u65f6\u65e7\u7684consumer\u5c1a\u6ca1\u6709\u91ca\u653e\u6b64\u8282\u70b9, 
# \u6b64\u503c\u7528\u4e8e\u63a7\u5236,\u6ce8\u518c\u8282\u70b9\u7684\u91cd\u8bd5\u6b21\u6570. 
rebalance.max.retries=5
# \u83b7\u53d6\u6d88\u606f\u7684\u6700\u5927\u5c3a\u5bf8,broker\u4e0d\u4f1a\u50cfconsumer\u8f93\u51fa\u5927\u4e8e\u6b64\u503c\u7684\u6d88\u606fchunk
# \u6bcf\u6b21feth\u5c06\u5f97\u5230\u591a\u6761\u6d88\u606f,\u6b64\u503c\u4e3a\u603b\u5927\u5c0f,\u63d0\u5347\u6b64\u503c,\u5c06\u4f1a\u6d88\u8017\u66f4\u591a\u7684consumer\u7aef\u5185\u5b58
fetch.min.bytes=6553600
# \u5f53\u6d88\u606f\u7684\u5c3a\u5bf8\u4e0d\u8db3\u65f6,server\u963b\u585e\u7684\u65f6\u95f4,\u5982\u679c\u8d85\u65f6,\u6d88\u606f\u5c06\u7acb\u5373\u53d1\u9001\u7ed9consumer
fetch.wait.max.ms=5000
socket.receive.buffer.bytes=655360
 
# \u5982\u679czookeeper\u6ca1\u6709offset\u503c\u6216offset\u503c\u8d85\u51fa\u8303\u56f4\u3002\u90a3\u4e48\u5c31\u7ed9\u4e2a\u521d\u59cb\u7684offset\u3002\u6709smallest\u3001largest\u3001
# anything\u53ef\u9009\uff0c\u5206\u522b\u8868\u793a\u7ed9\u5f53\u524d\u6700\u5c0f\u7684offset\u3001\u5f53\u524d\u6700\u5927\u7684offset\u3001\u629b\u5f02\u5e38\u3002\u9ed8\u8ba4largest
auto.offset.reset=smallest
# \u6307\u5b9a\u5e8f\u5217\u5316\u5904\u7406\u7c7b(mafka client API\u8c03\u7528\u8bf4\u660e-->3.\u5e8f\u5217\u5316\u7ea6\u5b9awiki)\uff0c\u9ed8\u8ba4\u4e3akafka.serializer.DefaultDecoder,\u5373byte[]
derializer.class=kafka.serializer.StringDecoder